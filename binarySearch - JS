// without recursion
function binSearch(inputArr = [1,2,3,4,5], key=2) { 
        var start = 0;
        var end = inputArr.length - 1;
        while (start <= end) {
            var mid = Math.ceil((start + end) / 2);
            if (key == inputArr[mid]) {
                return mid;
            }
            if (key < inputArr[mid]) {
                end = mid - 1;
            } else {
                start = mid + 1;
            }
        }
        return -1;
    }


// with recursion
function binarySearch(arr, l, r, k) {
    var l = l, 
        r = r ,
        mid = Math.ceil(arr.length / 2) - 1;
    debugger;
    if(k < arr[mid]){
        r = mid - 1;
        return binarySearch(arr.slice(0, r), 0, arr.slice(l).length - 1, k);
    } else if(k > arr[mid]){
        l = mid + 1;
        return binarySearch(arr.slice(l), 0, arr.slice(l).length - 1, k);
    } else if( k === arr[mid]){
        return arr[mid];
    } else {
        return -1;
    }
}
